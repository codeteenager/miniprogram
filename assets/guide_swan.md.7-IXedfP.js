import{_ as s,o as n,c as a,R as l,ax as p,ay as o,az as e}from"./chunks/framework.4QdTlAKM.js";const A=JSON.parse('{"title":"百度小程序原理","description":"","frontmatter":{},"headers":[],"relativePath":"guide/swan.md","filePath":"guide/swan.md","lastUpdated":1700133436000}'),c={name:"guide/swan.md"},t=l('<h1 id="百度小程序原理" tabindex="-1">百度小程序原理 <a class="header-anchor" href="#百度小程序原理" aria-label="Permalink to &quot;百度小程序原理&quot;">​</a></h1><h2 id="整体框架" tabindex="-1">整体框架 <a class="header-anchor" href="#整体框架" aria-label="Permalink to &quot;整体框架&quot;">​</a></h2><p>百度小程序的开发Api，加构设计与微信小程序基本一致。</p><p>为了提升整体性能，充分利用手机的多CPU性能：</p><ul><li>把逻辑层与渲染层分离，分别位于不同的运行容器</li><li>异步请求都由native来执行</li></ul><p><img src="'+p+'" alt=""></p><ol><li>逻辑层</li></ol><ul><li>逻辑层就是对开发者所暴露的Api，有App，Page，布局文件，其中的App，Page都是两个函数</li><li>App()函数的处理：直接创建App对象，全局唯一对象</li><li>Page()函数的处理：保存到Map中，不会马上构建Page对象，当导航到页面时，才会真正创建Page对象</li></ul><ol start="2"><li>渲染层</li></ol><ul><li>使用MVVM框架san来渲染界面</li><li>在编译期间把小程序标签转化为san框架所支持的标签</li><li>为每个小程序页面，创建对应的san框架下Page组件，PageComponent的template就是swan.xml转译后的内容</li></ul><ol start="3"><li>渲染层与逻辑层交互</li></ol><ul><li>渲染层接收用户的交互事件，由统一的函数处理后，通过消息总线传递到逻辑层的Page对象，再调用对应的函数</li><li>逻辑层依据用户操作，执行业务操作，修改data数据，通过消息总线传递到渲染层的组件里，San.Page组件会自动更新界面</li></ul><h2 id="开发流程" tabindex="-1">开发流程 <a class="header-anchor" href="#开发流程" aria-label="Permalink to &quot;开发流程&quot;">​</a></h2><h3 id="编译" tabindex="-1">编译 <a class="header-anchor" href="#编译" aria-label="Permalink to &quot;编译&quot;">​</a></h3><p>一个简单的百度小程序项目：</p><ol><li>目录结构：</li></ol><p><img src="'+o+`" alt=""></p><ol start="2"><li>App.js的源码</li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">App</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">onLaunch</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">event</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;onLaunch&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">onShow</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">event</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;onShow&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    globalData: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        userInfo: </span><span style="color:#9ECBFF;">&#39;user&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">App</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">onLaunch</span><span style="color:#24292E;">(</span><span style="color:#E36209;">event</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;onLaunch&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">onShow</span><span style="color:#24292E;">(</span><span style="color:#E36209;">event</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;onShow&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    globalData: {</span></span>
<span class="line"><span style="color:#24292E;">        userInfo: </span><span style="color:#032F62;">&#39;user&#39;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><ol start="3"><li>index.js的源码：</li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> p </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [];</span></span>
<span class="line"><span style="color:#B392F0;">Page</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    data: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        text: </span><span style="color:#9ECBFF;">&quot;这是一段文字.&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">: </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        p.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;其他文字&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">setData</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">            text: </span><span style="color:#9ECBFF;">&quot;这是一段文字.&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> p.</span><span style="color:#B392F0;">join</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;,&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        })</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">remove</span><span style="color:#E1E4E8;">: </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(p.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">            p.</span><span style="color:#B392F0;">pop</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">setData</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">                text: </span><span style="color:#9ECBFF;">&quot;这是一段文字.&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> p.</span><span style="color:#B392F0;">join</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;,&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">            });</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> p </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [];</span></span>
<span class="line"><span style="color:#6F42C1;">Page</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    data: {</span></span>
<span class="line"><span style="color:#24292E;">        text: </span><span style="color:#032F62;">&quot;这是一段文字.&quot;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">: </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        p.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;其他文字&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">setData</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">            text: </span><span style="color:#032F62;">&quot;这是一段文字.&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> p.</span><span style="color:#6F42C1;">join</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        })</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">remove</span><span style="color:#24292E;">: </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(p.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">            p.</span><span style="color:#6F42C1;">pop</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">setData</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">                text: </span><span style="color:#032F62;">&quot;这是一段文字.&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> p.</span><span style="color:#6F42C1;">join</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">            });</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><ol start="4"><li>index.swan的源码：</li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">view</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">view</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;text-px text-{{text}}&quot;</span><span style="color:#E1E4E8;">&gt;{{text}}&lt;/</span><span style="color:#85E89D;">view</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;btn&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;primary&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">bind</span><span style="color:#E1E4E8;">:</span><span style="color:#B392F0;">tap</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;add&quot;</span><span style="color:#E1E4E8;">&gt;add text&lt;/</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;btn&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;primary&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">bind</span><span style="color:#E1E4E8;">:</span><span style="color:#B392F0;">tap</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;remove&quot;</span><span style="color:#E1E4E8;">&gt;remove text&lt;/</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">view</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">view</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">view</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;text-px text-{{text}}&quot;</span><span style="color:#24292E;">&gt;{{text}}&lt;/</span><span style="color:#22863A;">view</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">button</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;btn&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;primary&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">bind</span><span style="color:#24292E;">:</span><span style="color:#6F42C1;">tap</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;add&quot;</span><span style="color:#24292E;">&gt;add text&lt;/</span><span style="color:#22863A;">button</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">button</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;btn&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;primary&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">bind</span><span style="color:#24292E;">:</span><span style="color:#6F42C1;">tap</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;remove&quot;</span><span style="color:#24292E;">&gt;remove text&lt;/</span><span style="color:#22863A;">button</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">view</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>以上的小程序代码，经过编译后的情况：</p><ol><li>目录结构：</li></ol><p><img src="`+e+`" alt=""></p><ol start="2"><li>App.js的源码：</li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"></span>
<span class="line"><span style="color:#79B8FF;">2</span></span>
<span class="line"><span style="color:#79B8FF;">3</span></span>
<span class="line"><span style="color:#79B8FF;">4</span></span>
<span class="line"><span style="color:#79B8FF;">5</span></span>
<span class="line"><span style="color:#79B8FF;">6</span></span>
<span class="line"><span style="color:#79B8FF;">7</span></span>
<span class="line"><span style="color:#79B8FF;">8</span></span>
<span class="line"><span style="color:#79B8FF;">9</span></span>
<span class="line"><span style="color:#79B8FF;">10</span></span>
<span class="line"><span style="color:#79B8FF;">11</span></span>
<span class="line"><span style="color:#79B8FF;">12</span></span>
<span class="line"><span style="color:#79B8FF;">13</span></span>
<span class="line"><span style="color:#79B8FF;">14</span></span>
<span class="line"><span style="color:#79B8FF;">15</span></span>
<span class="line"><span style="color:#79B8FF;">16</span></span>
<span class="line"><span style="color:#79B8FF;">17</span></span>
<span class="line"><span style="color:#79B8FF;">18</span></span>
<span class="line"><span style="color:#79B8FF;">19</span></span>
<span class="line"><span style="color:#79B8FF;">20</span></span>
<span class="line"><span style="color:#79B8FF;">21</span></span>
<span class="line"><span style="color:#79B8FF;">22</span></span>
<span class="line"><span style="color:#79B8FF;">23</span></span>
<span class="line"><span style="color:#79B8FF;">24</span></span>
<span class="line"><span style="color:#79B8FF;">25</span></span>
<span class="line"><span style="color:#79B8FF;">26</span></span>
<span class="line"><span style="color:#79B8FF;">27</span></span>
<span class="line"><span style="color:#79B8FF;">28</span></span>
<span class="line"><span style="color:#79B8FF;">29</span></span>
<span class="line"><span style="color:#79B8FF;">30</span></span>
<span class="line"><span style="color:#79B8FF;">31</span></span>
<span class="line"><span style="color:#79B8FF;">32</span></span>
<span class="line"><span style="color:#79B8FF;">33</span></span>
<span class="line"><span style="color:#79B8FF;">34</span></span>
<span class="line"><span style="color:#79B8FF;">35</span></span>
<span class="line"><span style="color:#79B8FF;">36</span></span>
<span class="line"><span style="color:#79B8FF;">37</span></span>
<span class="line"><span style="color:#79B8FF;">38</span></span>
<span class="line"><span style="color:#79B8FF;">39</span></span>
<span class="line"><span style="color:#79B8FF;">40</span></span>
<span class="line"><span style="color:#79B8FF;">41</span></span>
<span class="line"><span style="color:#79B8FF;">42</span></span>
<span class="line"><span style="color:#79B8FF;">43</span></span>
<span class="line"><span style="color:#E1E4E8;">window.</span><span style="color:#B392F0;">define</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;138&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">t</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">n</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">o</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">a</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">i</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">s</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">c</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">r</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">u</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">d</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">l</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">g</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">w</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">f</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">h</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> p </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [];</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">Page</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">            data: {</span></span>
<span class="line"><span style="color:#E1E4E8;">                text: </span><span style="color:#9ECBFF;">&quot;这是一段文字.&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">            },</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">: </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">t</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                p.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;其他文字&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">setData</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">                    text: </span><span style="color:#9ECBFF;">&quot;这是一段文字.&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> p.</span><span style="color:#B392F0;">join</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;,&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">                })</span></span>
<span class="line"><span style="color:#E1E4E8;">            },</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">remove</span><span style="color:#E1E4E8;">: </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">t</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                p.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> (p.</span><span style="color:#B392F0;">pop</span><span style="color:#E1E4E8;">(), </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">setData</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">                    text: </span><span style="color:#9ECBFF;">&quot;这是一段文字.&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> p.</span><span style="color:#B392F0;">join</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;,&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">                }))</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">        })</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">window.</span><span style="color:#B392F0;">define</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;193&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">t</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">n</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">o</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">a</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">i</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">s</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">c</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">r</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">u</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">d</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">l</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">g</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">w</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">f</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">h</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">App</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">onLaunch</span><span style="color:#E1E4E8;">: </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">t</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Lifecycle App onLaunch&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">            },</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">onShow</span><span style="color:#E1E4E8;">: </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">t</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Lifecycle App onShow&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">            },</span></span>
<span class="line"><span style="color:#E1E4E8;">            globalData: {</span></span>
<span class="line"><span style="color:#E1E4E8;">                userInfo: </span><span style="color:#9ECBFF;">&#39;user&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">        })</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">window.__swanRoute </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;app&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">window.usingComponents </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [];</span></span>
<span class="line"><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;193&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">window.__swanRoute </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;pages/text/text&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">window.usingComponents </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [];</span></span>
<span class="line"><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;138&quot;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"></span>
<span class="line"><span style="color:#005CC5;">2</span></span>
<span class="line"><span style="color:#005CC5;">3</span></span>
<span class="line"><span style="color:#005CC5;">4</span></span>
<span class="line"><span style="color:#005CC5;">5</span></span>
<span class="line"><span style="color:#005CC5;">6</span></span>
<span class="line"><span style="color:#005CC5;">7</span></span>
<span class="line"><span style="color:#005CC5;">8</span></span>
<span class="line"><span style="color:#005CC5;">9</span></span>
<span class="line"><span style="color:#005CC5;">10</span></span>
<span class="line"><span style="color:#005CC5;">11</span></span>
<span class="line"><span style="color:#005CC5;">12</span></span>
<span class="line"><span style="color:#005CC5;">13</span></span>
<span class="line"><span style="color:#005CC5;">14</span></span>
<span class="line"><span style="color:#005CC5;">15</span></span>
<span class="line"><span style="color:#005CC5;">16</span></span>
<span class="line"><span style="color:#005CC5;">17</span></span>
<span class="line"><span style="color:#005CC5;">18</span></span>
<span class="line"><span style="color:#005CC5;">19</span></span>
<span class="line"><span style="color:#005CC5;">20</span></span>
<span class="line"><span style="color:#005CC5;">21</span></span>
<span class="line"><span style="color:#005CC5;">22</span></span>
<span class="line"><span style="color:#005CC5;">23</span></span>
<span class="line"><span style="color:#005CC5;">24</span></span>
<span class="line"><span style="color:#005CC5;">25</span></span>
<span class="line"><span style="color:#005CC5;">26</span></span>
<span class="line"><span style="color:#005CC5;">27</span></span>
<span class="line"><span style="color:#005CC5;">28</span></span>
<span class="line"><span style="color:#005CC5;">29</span></span>
<span class="line"><span style="color:#005CC5;">30</span></span>
<span class="line"><span style="color:#005CC5;">31</span></span>
<span class="line"><span style="color:#005CC5;">32</span></span>
<span class="line"><span style="color:#005CC5;">33</span></span>
<span class="line"><span style="color:#005CC5;">34</span></span>
<span class="line"><span style="color:#005CC5;">35</span></span>
<span class="line"><span style="color:#005CC5;">36</span></span>
<span class="line"><span style="color:#005CC5;">37</span></span>
<span class="line"><span style="color:#005CC5;">38</span></span>
<span class="line"><span style="color:#005CC5;">39</span></span>
<span class="line"><span style="color:#005CC5;">40</span></span>
<span class="line"><span style="color:#005CC5;">41</span></span>
<span class="line"><span style="color:#005CC5;">42</span></span>
<span class="line"><span style="color:#005CC5;">43</span></span>
<span class="line"><span style="color:#24292E;">window.</span><span style="color:#6F42C1;">define</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;138&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">t</span><span style="color:#24292E;">, </span><span style="color:#E36209;">e</span><span style="color:#24292E;">, </span><span style="color:#E36209;">n</span><span style="color:#24292E;">, </span><span style="color:#E36209;">o</span><span style="color:#24292E;">, </span><span style="color:#E36209;">a</span><span style="color:#24292E;">, </span><span style="color:#E36209;">i</span><span style="color:#24292E;">, </span><span style="color:#E36209;">s</span><span style="color:#24292E;">, </span><span style="color:#E36209;">c</span><span style="color:#24292E;">, </span><span style="color:#E36209;">r</span><span style="color:#24292E;">, </span><span style="color:#E36209;">u</span><span style="color:#24292E;">, </span><span style="color:#E36209;">d</span><span style="color:#24292E;">, </span><span style="color:#E36209;">l</span><span style="color:#24292E;">, </span><span style="color:#E36209;">g</span><span style="color:#24292E;">, </span><span style="color:#E36209;">w</span><span style="color:#24292E;">, </span><span style="color:#E36209;">f</span><span style="color:#24292E;">, </span><span style="color:#E36209;">h</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> p </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [];</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">Page</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">            data: {</span></span>
<span class="line"><span style="color:#24292E;">                text: </span><span style="color:#032F62;">&quot;这是一段文字.&quot;</span></span>
<span class="line"><span style="color:#24292E;">            },</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">: </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">t</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                p.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;其他文字&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">setData</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">                    text: </span><span style="color:#032F62;">&quot;这是一段文字.&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> p.</span><span style="color:#6F42C1;">join</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">                })</span></span>
<span class="line"><span style="color:#24292E;">            },</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">remove</span><span style="color:#24292E;">: </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">t</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                p.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> (p.</span><span style="color:#6F42C1;">pop</span><span style="color:#24292E;">(), </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">setData</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">                    text: </span><span style="color:#032F62;">&quot;这是一段文字.&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> p.</span><span style="color:#6F42C1;">join</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">                }))</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        })</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">window.</span><span style="color:#6F42C1;">define</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;193&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">t</span><span style="color:#24292E;">, </span><span style="color:#E36209;">e</span><span style="color:#24292E;">, </span><span style="color:#E36209;">n</span><span style="color:#24292E;">, </span><span style="color:#E36209;">o</span><span style="color:#24292E;">, </span><span style="color:#E36209;">a</span><span style="color:#24292E;">, </span><span style="color:#E36209;">i</span><span style="color:#24292E;">, </span><span style="color:#E36209;">s</span><span style="color:#24292E;">, </span><span style="color:#E36209;">c</span><span style="color:#24292E;">, </span><span style="color:#E36209;">r</span><span style="color:#24292E;">, </span><span style="color:#E36209;">u</span><span style="color:#24292E;">, </span><span style="color:#E36209;">d</span><span style="color:#24292E;">, </span><span style="color:#E36209;">l</span><span style="color:#24292E;">, </span><span style="color:#E36209;">g</span><span style="color:#24292E;">, </span><span style="color:#E36209;">w</span><span style="color:#24292E;">, </span><span style="color:#E36209;">f</span><span style="color:#24292E;">, </span><span style="color:#E36209;">h</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">App</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">onLaunch</span><span style="color:#24292E;">: </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">t</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Lifecycle App onLaunch&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">            },</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">onShow</span><span style="color:#24292E;">: </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">t</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Lifecycle App onShow&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">            },</span></span>
<span class="line"><span style="color:#24292E;">            globalData: {</span></span>
<span class="line"><span style="color:#24292E;">                userInfo: </span><span style="color:#032F62;">&#39;user&#39;</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        })</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">window.__swanRoute </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;app&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">window.usingComponents </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [];</span></span>
<span class="line"><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;193&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">window.__swanRoute </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;pages/text/text&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">window.usingComponents </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [];</span></span>
<span class="line"><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;138&quot;</span><span style="color:#24292E;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br></div></div><ol start="3"><li>index.swan.js的源码：</li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 注意，做了一些简化</span></span>
<span class="line"><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">global</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    global.errorMsg </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [];</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> templateComponents </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Object.</span><span style="color:#B392F0;">assign</span><span style="color:#E1E4E8;">({}, {});</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> param </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {};</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> filterArr </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">JSON</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">parse</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;[]&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        filterArr </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> filterArr.</span><span style="color:#B392F0;">forEach</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">item</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            param[item.module] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">eval</span><span style="color:#E1E4E8;">(item.module)</span></span>
<span class="line"><span style="color:#E1E4E8;">        });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> pageContent </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`</span></span>
<span class="line"><span style="color:#9ECBFF;">            &lt;view&gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">                &lt;view&gt;{{text}}&lt;/view&gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">                &lt;button class=</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">btn</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;"> type=</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">primary</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;"> on-bindtap=</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">eventHappen(&#39;tap&#39;, $event, &#39;add&#39;, &#39;&#39;, &#39;bind&#39;)</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">&gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">                    add text</span></span>
<span class="line"><span style="color:#9ECBFF;">                &lt;/button&gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">                &lt;button class=</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">btn</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;"> type=</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">primary</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;"> on-bindtap=</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">eventHappen(&#39;tap&#39;, $event, &#39;remove&#39;, &#39;&#39;, &#39;bind&#39;)</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">&gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">                    remove text</span></span>
<span class="line"><span style="color:#9ECBFF;">                &lt;/button&gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">            &lt;/view&gt;\`</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">renderPage</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">filters</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">modules</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 路径与该组件映射</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// var customAbsolutePathMap = (global.componentFactory.getAllComponents(), {});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 当前页面使用的自定义组件</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// const pageUsingComponentMap = JSON.parse(&quot;{}&quot;);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 生成该页面引用的自定义组件</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// const customComponents = Object.keys(pageUsingComponentMap).reduce((customComponents, customName) =&gt; {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 	customComponents[customName] = customAbsolutePathMap[pageUsingComponentMap[customName]];</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 	return customComponents;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// }, {});</span></span>
<span class="line"><span style="color:#E1E4E8;">            global.</span><span style="color:#B392F0;">pageRender</span><span style="color:#E1E4E8;">(pageContent, templateComponents)</span></span>
<span class="line"><span style="color:#E1E4E8;">        };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">renderPage</span><span style="color:#E1E4E8;">(filterArr, param);</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (e) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        global.errorMsg[</span><span style="color:#9ECBFF;">&#39;execError&#39;</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> e;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> e;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">})(window);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 注意，做了一些简化</span></span>
<span class="line"><span style="color:#24292E;">((</span><span style="color:#E36209;">global</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    global.errorMsg </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [];</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> templateComponents </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Object.</span><span style="color:#6F42C1;">assign</span><span style="color:#24292E;">({}, {});</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> param </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {};</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> filterArr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">JSON</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">parse</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;[]&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        filterArr </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> filterArr.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">item</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            param[item.module] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">eval</span><span style="color:#24292E;">(item.module)</span></span>
<span class="line"><span style="color:#24292E;">        });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> pageContent </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`</span></span>
<span class="line"><span style="color:#032F62;">            &lt;view&gt;</span></span>
<span class="line"><span style="color:#032F62;">                &lt;view&gt;{{text}}&lt;/view&gt;</span></span>
<span class="line"><span style="color:#032F62;">                &lt;button class=</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">btn</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;"> type=</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">primary</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;"> on-bindtap=</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">eventHappen(&#39;tap&#39;, $event, &#39;add&#39;, &#39;&#39;, &#39;bind&#39;)</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">&gt;</span></span>
<span class="line"><span style="color:#032F62;">                    add text</span></span>
<span class="line"><span style="color:#032F62;">                &lt;/button&gt;</span></span>
<span class="line"><span style="color:#032F62;">                &lt;button class=</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">btn</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;"> type=</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">primary</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;"> on-bindtap=</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">eventHappen(&#39;tap&#39;, $event, &#39;remove&#39;, &#39;&#39;, &#39;bind&#39;)</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">&gt;</span></span>
<span class="line"><span style="color:#032F62;">                    remove text</span></span>
<span class="line"><span style="color:#032F62;">                &lt;/button&gt;</span></span>
<span class="line"><span style="color:#032F62;">            &lt;/view&gt;\`</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">renderPage</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">filters</span><span style="color:#24292E;">, </span><span style="color:#E36209;">modules</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 路径与该组件映射</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// var customAbsolutePathMap = (global.componentFactory.getAllComponents(), {});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 当前页面使用的自定义组件</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// const pageUsingComponentMap = JSON.parse(&quot;{}&quot;);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 生成该页面引用的自定义组件</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// const customComponents = Object.keys(pageUsingComponentMap).reduce((customComponents, customName) =&gt; {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 	customComponents[customName] = customAbsolutePathMap[pageUsingComponentMap[customName]];</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 	return customComponents;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// }, {});</span></span>
<span class="line"><span style="color:#24292E;">            global.</span><span style="color:#6F42C1;">pageRender</span><span style="color:#24292E;">(pageContent, templateComponents)</span></span>
<span class="line"><span style="color:#24292E;">        };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">renderPage</span><span style="color:#24292E;">(filterArr, param);</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (e) {</span></span>
<span class="line"><span style="color:#24292E;">        global.errorMsg[</span><span style="color:#032F62;">&#39;execError&#39;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> e;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> e;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">})(window);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div><h3 id="编译总结" tabindex="-1">编译总结： <a class="header-anchor" href="#编译总结" aria-label="Permalink to &quot;编译总结：&quot;">​</a></h3><ol><li>对template进行转换：</li></ol><ul><li>标签转换：bind:tap ===&gt; on-bindtap</li><li>事件包装：eventHappen(‘tap’, $event, ‘add’, ‘’, ‘bind’)</li></ul><ol start="2"><li>对App.js进行包装，提升效率，减少逐一加载流程</li><li>通过渲染模板，生成index.swan.js文件，提升渲染效率</li></ol><h2 id="加载-启动-渲染" tabindex="-1">加载，启动，渲染 <a class="header-anchor" href="#加载-启动-渲染" aria-label="Permalink to &quot;加载，启动，渲染&quot;">​</a></h2><p>用户点击跳转到小程序后：</p><ol><li>Native的任务： <ol><li>下载小程序.zip文件</li><li>启动两个web运行容器： <ol><li>渲染层webview加载slaves.html</li><li>逻辑层jscore加载master.html</li></ol></li><li>解析小程序app.json，发送’AppReady’事件</li></ol></li><li>逻辑层master.js： <ol><li>监听’AppReady’事件，执行小程序的调起逻辑</li></ol></li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 监听客户端的调起逻辑</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#B392F0;">listenAppReady</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.swaninterface.</span><span style="color:#B392F0;">bind</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;AppReady&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">event</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;master listener AppReady &#39;</span><span style="color:#E1E4E8;">, event);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">swanEvents</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;masterActiveStart&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 给三方用的，并非给框架用，请保留</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.context.appConfig </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> event.appConfig;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 初始化master的入口逻辑</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">initRender</span><span style="color:#E1E4E8;">(event);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// this.preLoadSubPackage();</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 监听客户端的调起逻辑</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#6F42C1;">listenAppReady</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.swaninterface.</span><span style="color:#6F42C1;">bind</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;AppReady&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">event</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;master listener AppReady &#39;</span><span style="color:#24292E;">, event);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">swanEvents</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;masterActiveStart&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 给三方用的，并非给框架用，请保留</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.context.appConfig </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> event.appConfig;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 初始化master的入口逻辑</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">initRender</span><span style="color:#24292E;">(event);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// this.preLoadSubPackage();</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><ol start="2"><li>初始化master的入口逻辑，小程序的每个界面，对应一个Slave对象（与渲染层的slave.js不一样），依据用户打开多个页面，构建一个导航栈，保存在navigator对象里</li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 初始化渲染</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{Object}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">initEvent</span><span style="color:#6A737D;"> - 客户端传递的初始化事件对象</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{string}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">initEvent.appConfig</span><span style="color:#6A737D;"> - 客户端将app.json的内容（json字符串）给前端用于处理</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{string}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">initEvent.appPath</span><span style="color:#6A737D;"> - app在手机上的磁盘位置</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{string}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">initEvent.wvID</span><span style="color:#6A737D;"> - 第一个slave的id</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{string}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">initEvent.pageUrl</span><span style="color:#6A737D;"> - 第一个slave的url</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#B392F0;">initRender</span><span style="color:#E1E4E8;">(initEvent) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 设置appConfig</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.navigator.</span><span style="color:#B392F0;">setAppConfig</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">...</span><span style="color:#79B8FF;">JSON</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">parse</span><span style="color:#E1E4E8;">(initEvent.appConfig),</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">            appRootPath: initEvent.appPath</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">swanEvents</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;masterActiveInitRender&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 压入initSlave</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.navigator.</span><span style="color:#B392F0;">pushInitSlave</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">        pageUrl: initEvent.pageUrl,</span></span>
<span class="line"><span style="color:#E1E4E8;">        slaveId: </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">initEvent.wvID,</span></span>
<span class="line"><span style="color:#E1E4E8;">        root: initEvent.root,</span></span>
<span class="line"><span style="color:#E1E4E8;">        preventAppLoad: initEvent.preventAppLoad</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.appPath </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> initEvent.appPath;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">swanEvents</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;masterActivePushInitslave&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 初始化渲染</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{Object}</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">initEvent</span><span style="color:#6A737D;"> - 客户端传递的初始化事件对象</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{string}</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">initEvent.appConfig</span><span style="color:#6A737D;"> - 客户端将app.json的内容（json字符串）给前端用于处理</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{string}</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">initEvent.appPath</span><span style="color:#6A737D;"> - app在手机上的磁盘位置</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{string}</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">initEvent.wvID</span><span style="color:#6A737D;"> - 第一个slave的id</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{string}</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">initEvent.pageUrl</span><span style="color:#6A737D;"> - 第一个slave的url</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#6F42C1;">initRender</span><span style="color:#24292E;">(initEvent) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 设置appConfig</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.navigator.</span><span style="color:#6F42C1;">setAppConfig</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">...</span><span style="color:#005CC5;">JSON</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">parse</span><span style="color:#24292E;">(initEvent.appConfig),</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">...</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">            appRootPath: initEvent.appPath</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">swanEvents</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;masterActiveInitRender&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 压入initSlave</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.navigator.</span><span style="color:#6F42C1;">pushInitSlave</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">        pageUrl: initEvent.pageUrl,</span></span>
<span class="line"><span style="color:#24292E;">        slaveId: </span><span style="color:#D73A49;">+</span><span style="color:#24292E;">initEvent.wvID,</span></span>
<span class="line"><span style="color:#24292E;">        root: initEvent.root,</span></span>
<span class="line"><span style="color:#24292E;">        preventAppLoad: initEvent.preventAppLoad</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.appPath </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> initEvent.appPath;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">swanEvents</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;masterActivePushInitslave&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><ol start="3"><li>创建初始化页面的slave后，如果没有预加载，就加载小程序里的app.js文件（注意：是编译后的app.js文件），并发送’slaveLoaded’事件，通知渲染层开始渲染</li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 初始化第一个slave</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{Object}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">[initParams]</span><span style="color:#6A737D;"> - 初始化的参数</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#B392F0;">pushInitSlave</span><span style="color:#E1E4E8;">(initParams) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">.</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 创建初始化slave</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.initSlave </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">createInitSlave</span><span style="color:#E1E4E8;">(initParams.pageUrl, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.appConfig);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// slave的init调用</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.initSlave</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">init</span><span style="color:#E1E4E8;">(initParams)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">then</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">initRes</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">swanEvents</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;masterActiveCreateInitslaveEnd&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 入栈</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.history.</span><span style="color:#B392F0;">pushHistory</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.initSlave);</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">swanEvents</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;masterActivePushInitslaveEnd&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 调用slave的onEnqueue生命周期函数</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.initSlave.</span><span style="color:#B392F0;">onEnqueue</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">swanEvents</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;masterActiveOnqueueInitslave&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        });</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 初始化为第一个页面</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{Object}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">initParams</span><span style="color:#6A737D;"> 初始化的配置参数</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@return</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{Promise}</span><span style="color:#6A737D;"> 返回初始化之后的Promise流</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#E1E4E8;">Slave.</span><span style="color:#B392F0;">init</span><span style="color:#E1E4E8;">(initParams) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.isFirstPage </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Promise</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">(initParams)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">then</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">initParams</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">swanEvents</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;masterActiveInitAction&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!!</span><span style="color:#E1E4E8;">initParams.preventAppLoad) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> initParams;</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// const loadCommonJs = this.appConfig.splitAppJs</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// &amp;&amp; !this.appConfig.subPackages</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 	? &#39;common.js&#39; : &#39;app.js&#39;;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">loadCommonJs</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;app.js&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> loader</span></span>
<span class="line"><span style="color:#E1E4E8;">                .</span><span style="color:#B392F0;">loadjs</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`\${</span><span style="color:#79B8FF;">this</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">appRootPath</span><span style="color:#9ECBFF;">}/\${</span><span style="color:#E1E4E8;">loadCommonJs</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;masterActiveAppJsLoaded&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">                .</span><span style="color:#B392F0;">then</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.loadJs.</span><span style="color:#B392F0;">call</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">, initParams);</span></span>
<span class="line"><span style="color:#E1E4E8;">                });</span></span>
<span class="line"><span style="color:#E1E4E8;">        })</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">then</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">initParams</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.uri </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> initParams.pageUrl.</span><span style="color:#B392F0;">split</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;?&#39;</span><span style="color:#E1E4E8;">)[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.accessUri </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> initParams.pageUrl;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.slaveId </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> initParams.slaveId;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// init的事件为客户端处理，确保是在slave加载完成之后，所以可以直接派发</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.swaninterface.communicator.</span><span style="color:#B392F0;">fireMessage</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">                type: </span><span style="color:#9ECBFF;">\`slaveLoaded\${</span><span style="color:#79B8FF;">this</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">slaveId</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                message: {slaveId: </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.slaveId}</span></span>
<span class="line"><span style="color:#E1E4E8;">            });</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> initParams;</span></span>
<span class="line"><span style="color:#E1E4E8;">        });</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 初始化第一个slave</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{Object}</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">[initParams]</span><span style="color:#6A737D;"> - 初始化的参数</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#6F42C1;">pushInitSlave</span><span style="color:#24292E;">(initParams) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">...</span><span style="color:#24292E;">.</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 创建初始化slave</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.initSlave </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">createInitSlave</span><span style="color:#24292E;">(initParams.pageUrl, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.appConfig);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// slave的init调用</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.initSlave</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">init</span><span style="color:#24292E;">(initParams)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">then</span><span style="color:#24292E;">(</span><span style="color:#E36209;">initRes</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">swanEvents</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;masterActiveCreateInitslaveEnd&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 入栈</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.history.</span><span style="color:#6F42C1;">pushHistory</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.initSlave);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">swanEvents</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;masterActivePushInitslaveEnd&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 调用slave的onEnqueue生命周期函数</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.initSlave.</span><span style="color:#6F42C1;">onEnqueue</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">swanEvents</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;masterActiveOnqueueInitslave&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        });</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 初始化为第一个页面</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{Object}</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">initParams</span><span style="color:#6A737D;"> 初始化的配置参数</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{Promise}</span><span style="color:#6A737D;"> 返回初始化之后的Promise流</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#24292E;">Slave.</span><span style="color:#6F42C1;">init</span><span style="color:#24292E;">(initParams) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.isFirstPage </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Promise</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">(initParams)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">then</span><span style="color:#24292E;">(</span><span style="color:#E36209;">initParams</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">swanEvents</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;masterActiveInitAction&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!!</span><span style="color:#24292E;">initParams.preventAppLoad) {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> initParams;</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// const loadCommonJs = this.appConfig.splitAppJs</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// &amp;&amp; !this.appConfig.subPackages</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 	? &#39;common.js&#39; : &#39;app.js&#39;;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">loadCommonJs</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;app.js&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> loader</span></span>
<span class="line"><span style="color:#24292E;">                .</span><span style="color:#6F42C1;">loadjs</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`\${</span><span style="color:#005CC5;">this</span><span style="color:#032F62;">.</span><span style="color:#24292E;">appRootPath</span><span style="color:#032F62;">}/\${</span><span style="color:#24292E;">loadCommonJs</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;masterActiveAppJsLoaded&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">                .</span><span style="color:#6F42C1;">then</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.loadJs.</span><span style="color:#6F42C1;">call</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">, initParams);</span></span>
<span class="line"><span style="color:#24292E;">                });</span></span>
<span class="line"><span style="color:#24292E;">        })</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">then</span><span style="color:#24292E;">(</span><span style="color:#E36209;">initParams</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.uri </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> initParams.pageUrl.</span><span style="color:#6F42C1;">split</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;?&#39;</span><span style="color:#24292E;">)[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.accessUri </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> initParams.pageUrl;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.slaveId </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> initParams.slaveId;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// init的事件为客户端处理，确保是在slave加载完成之后，所以可以直接派发</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.swaninterface.communicator.</span><span style="color:#6F42C1;">fireMessage</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">                type: </span><span style="color:#032F62;">\`slaveLoaded\${</span><span style="color:#005CC5;">this</span><span style="color:#032F62;">.</span><span style="color:#24292E;">slaveId</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                message: {slaveId: </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.slaveId}</span></span>
<span class="line"><span style="color:#24292E;">            });</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> initParams;</span></span>
<span class="line"><span style="color:#24292E;">        });</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br></div></div><ol start="4"><li>执行slave入栈后的生命周期函数this.initSlave.onEnqueue(); 在此函数里，会真正Page Instance，同时监听到渲染层准备好后，发送’initData’事件</li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 入栈之后的生命周期方法</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@return</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{Object}</span><span style="color:#6A737D;"> 入栈之后，创建的本slave的页面实例对象</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#B392F0;">onEnqueue</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">createPageInstance</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 创建页面实例，并且，当slave加载完成之后，向slave传递初始化data</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@return</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{Promise}</span><span style="color:#6A737D;"> 创建完成的事件流</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#B392F0;">createPageInstance</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">isCreated</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Promise</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">swanEvents</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;masterActiveCreatePageFlowStart&#39;</span><span style="color:#E1E4E8;">, {</span></span>
<span class="line"><span style="color:#E1E4E8;">        uri: </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.uri</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">userPageInstance</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createPageInstance</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.accessUri, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.slaveId, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.appConfig);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">query</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> userPageInstance.privateProperties.accessUri.</span><span style="color:#B392F0;">split</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;?&#39;</span><span style="color:#E1E4E8;">)[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">setUserPageInstance</span><span style="color:#E1E4E8;">(userPageInstance);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">swanEvents</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;masterPageOnLoadHookStart&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        userPageInstance.</span><span style="color:#B392F0;">_onLoad</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">getParams</span><span style="color:#E1E4E8;">(query));</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">swanEvents</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;masterPageOnLoadHookEnd&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (e) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// avoid empty state</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.status </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">STATUS_MAP</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">CREATED</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`Master 监听 slaveLoaded 事件，slaveId=\${</span><span style="color:#79B8FF;">this</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">slaveId</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.swaninterface.</span><span style="color:#B392F0;">invoke</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;loadJs&#39;</span><span style="color:#E1E4E8;">, {</span></span>
<span class="line"><span style="color:#E1E4E8;">        uri: </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.uri,</span></span>
<span class="line"><span style="color:#E1E4E8;">        eventObj: {</span></span>
<span class="line"><span style="color:#E1E4E8;">            wvID: </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.slaveId</span></span>
<span class="line"><span style="color:#E1E4E8;">        },</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">success</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">params</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">swanEvents</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;masterActiveCreatePageFlowEnd&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">swanEvents</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;masterActiveSendInitdataStart&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            userPageInstance.privateMethod</span></span>
<span class="line"><span style="color:#E1E4E8;">                .sendInitData.</span><span style="color:#B392F0;">call</span><span style="color:#E1E4E8;">(userPageInstance, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.appConfig);</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">swanEvents</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;masterActiveSendInitdataEnd&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 入栈之后的生命周期方法</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{Object}</span><span style="color:#6A737D;"> 入栈之后，创建的本slave的页面实例对象</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#6F42C1;">onEnqueue</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">createPageInstance</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 创建页面实例，并且，当slave加载完成之后，向slave传递初始化data</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{Promise}</span><span style="color:#6A737D;"> 创建完成的事件流</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#6F42C1;">createPageInstance</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">isCreated</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Promise</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">swanEvents</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;masterActiveCreatePageFlowStart&#39;</span><span style="color:#24292E;">, {</span></span>
<span class="line"><span style="color:#24292E;">        uri: </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.uri</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">userPageInstance</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createPageInstance</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.accessUri, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.slaveId, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.appConfig);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">query</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> userPageInstance.privateProperties.accessUri.</span><span style="color:#6F42C1;">split</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;?&#39;</span><span style="color:#24292E;">)[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">setUserPageInstance</span><span style="color:#24292E;">(userPageInstance);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">swanEvents</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;masterPageOnLoadHookStart&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        userPageInstance.</span><span style="color:#6F42C1;">_onLoad</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">getParams</span><span style="color:#24292E;">(query));</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">swanEvents</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;masterPageOnLoadHookEnd&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (e) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// avoid empty state</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.status </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">STATUS_MAP</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">CREATED</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`Master 监听 slaveLoaded 事件，slaveId=\${</span><span style="color:#005CC5;">this</span><span style="color:#032F62;">.</span><span style="color:#24292E;">slaveId</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.swaninterface.</span><span style="color:#6F42C1;">invoke</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;loadJs&#39;</span><span style="color:#24292E;">, {</span></span>
<span class="line"><span style="color:#24292E;">        uri: </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.uri,</span></span>
<span class="line"><span style="color:#24292E;">        eventObj: {</span></span>
<span class="line"><span style="color:#24292E;">            wvID: </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.slaveId</span></span>
<span class="line"><span style="color:#24292E;">        },</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">success</span><span style="color:#24292E;">: </span><span style="color:#E36209;">params</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">swanEvents</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;masterActiveCreatePageFlowEnd&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">swanEvents</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;masterActiveSendInitdataStart&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            userPageInstance.privateMethod</span></span>
<span class="line"><span style="color:#24292E;">                .sendInitData.</span><span style="color:#6F42C1;">call</span><span style="color:#24292E;">(userPageInstance, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.appConfig);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">swanEvents</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;masterActiveSendInitdataEnd&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br></div></div><ol start="3"><li>渲染层slave.js <ol><li>监听’PageReady’事件，加载对应页面的文件：app.css，index.css，index.swan.js文件</li></ol></li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 监听pageReady，触发整个入口的调起</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{Object}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">[global]</span><span style="color:#6A737D;"> 全局对象</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#B392F0;">listenPageReady</span><span style="color:#E1E4E8;">(global) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">swanEvents</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;slavePreloadListened&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 控制是否开启预取initData的开关</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> advancedInitDataSwitch </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.swaninterface.</span><span style="color:#B392F0;">bind</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;PageReady&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">event</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">swanEvents</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;slaveActiveStart&#39;</span><span style="color:#E1E4E8;">, {</span></span>
<span class="line"><span style="color:#E1E4E8;">            pageInitRenderStart: Date.</span><span style="color:#B392F0;">now</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">        });</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">appPath</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> event.appPath;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">pagePath</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> event.pagePath.</span><span style="color:#B392F0;">split</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;?&#39;</span><span style="color:#E1E4E8;">)[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">onReachBottomDistance</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> event.onReachBottomDistance;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">loadUserRes</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 设置页面的基础路径为当前页面本应所在的路径</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 行内样式等使用相对路径变成此值</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// setPageBasePath(\`\${appPath}/\${pagePath}\`);</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">swanEvents</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;slaveActivePageLoadStart&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 加载用户的资源</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">Promise</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">all</span><span style="color:#E1E4E8;">([</span></span>
<span class="line"><span style="color:#E1E4E8;">                loader.</span><span style="color:#B392F0;">loadcss</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`\${</span><span style="color:#E1E4E8;">appPath</span><span style="color:#9ECBFF;">}/app.css\`</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;slaveActiveAppCssLoaded&#39;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">                loader.</span><span style="color:#B392F0;">loadcss</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`\${</span><span style="color:#E1E4E8;">appPath</span><span style="color:#9ECBFF;">}/\${</span><span style="color:#E1E4E8;">pagePath</span><span style="color:#9ECBFF;">}.css\`</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;slaveActivePageCssLoaded&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">            ])</span></span>
<span class="line"><span style="color:#E1E4E8;">                .</span><span style="color:#B392F0;">catch</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    console.</span><span style="color:#B392F0;">warn</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;加载css资源出现问题，请检查css文件&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                })</span></span>
<span class="line"><span style="color:#E1E4E8;">                .</span><span style="color:#B392F0;">then</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#6A737D;">// todo: 兼容天幕，第一个等天幕同步后，干掉</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#B392F0;">swanEvents</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;slaveActiveCssLoaded&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#B392F0;">swanEvents</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;slaveActiveSwanJsStart&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                    loader.</span><span style="color:#B392F0;">loadjs</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`\${</span><span style="color:#E1E4E8;">appPath</span><span style="color:#9ECBFF;">}/\${</span><span style="color:#E1E4E8;">pagePath</span><span style="color:#9ECBFF;">}.swan.js\`</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;slaveActiveSwanJsLoaded&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                });</span></span>
<span class="line"><span style="color:#E1E4E8;">        };</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// (event.devhook === &#39;true&#39; ? loadHook().then(loadUserRes).catch(loadUserRes) : loadUserRes());</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">loadUserRes</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 监听pageReady，触发整个入口的调起</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{Object}</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">[global]</span><span style="color:#6A737D;"> 全局对象</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#6F42C1;">listenPageReady</span><span style="color:#24292E;">(global) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">swanEvents</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;slavePreloadListened&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 控制是否开启预取initData的开关</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> advancedInitDataSwitch </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.swaninterface.</span><span style="color:#6F42C1;">bind</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;PageReady&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">event</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">swanEvents</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;slaveActiveStart&#39;</span><span style="color:#24292E;">, {</span></span>
<span class="line"><span style="color:#24292E;">            pageInitRenderStart: Date.</span><span style="color:#6F42C1;">now</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;&#39;</span></span>
<span class="line"><span style="color:#24292E;">        });</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">...</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">appPath</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> event.appPath;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">pagePath</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> event.pagePath.</span><span style="color:#6F42C1;">split</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;?&#39;</span><span style="color:#24292E;">)[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">onReachBottomDistance</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> event.onReachBottomDistance;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">...</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">loadUserRes</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 设置页面的基础路径为当前页面本应所在的路径</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 行内样式等使用相对路径变成此值</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// setPageBasePath(\`\${appPath}/\${pagePath}\`);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">swanEvents</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;slaveActivePageLoadStart&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 加载用户的资源</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">Promise</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">all</span><span style="color:#24292E;">([</span></span>
<span class="line"><span style="color:#24292E;">                loader.</span><span style="color:#6F42C1;">loadcss</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`\${</span><span style="color:#24292E;">appPath</span><span style="color:#032F62;">}/app.css\`</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;slaveActiveAppCssLoaded&#39;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">                loader.</span><span style="color:#6F42C1;">loadcss</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`\${</span><span style="color:#24292E;">appPath</span><span style="color:#032F62;">}/\${</span><span style="color:#24292E;">pagePath</span><span style="color:#032F62;">}.css\`</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;slaveActivePageCssLoaded&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">            ])</span></span>
<span class="line"><span style="color:#24292E;">                .</span><span style="color:#6F42C1;">catch</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                    console.</span><span style="color:#6F42C1;">warn</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;加载css资源出现问题，请检查css文件&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                })</span></span>
<span class="line"><span style="color:#24292E;">                .</span><span style="color:#6F42C1;">then</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#6A737D;">// todo: 兼容天幕，第一个等天幕同步后，干掉</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#6F42C1;">swanEvents</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;slaveActiveCssLoaded&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#6F42C1;">swanEvents</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;slaveActiveSwanJsStart&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                    loader.</span><span style="color:#6F42C1;">loadjs</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`\${</span><span style="color:#24292E;">appPath</span><span style="color:#032F62;">}/\${</span><span style="color:#24292E;">pagePath</span><span style="color:#032F62;">}.swan.js\`</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;slaveActiveSwanJsLoaded&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                });</span></span>
<span class="line"><span style="color:#24292E;">        };</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// (event.devhook === &#39;true&#39; ? loadHook().then(loadUserRes).catch(loadUserRes) : loadUserRes());</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">loadUserRes</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><ol start="2"><li>在每个页面编译后的xxx.swan.js文件里，会执行pageRender()函数，进行界面渲染，如此demo里的index.swan.js文件：</li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">global</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    global.errorMsg </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [];</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> templateComponents </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Object.</span><span style="color:#B392F0;">assign</span><span style="color:#E1E4E8;">({}, {});</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> param </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {};</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> filterArr </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">JSON</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">parse</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;[]&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        filterArr </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> filterArr.</span><span style="color:#B392F0;">forEach</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">item</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            param[item.module] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">eval</span><span style="color:#E1E4E8;">(item.module)</span></span>
<span class="line"><span style="color:#E1E4E8;">        });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> pageContent </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`</span></span>
<span class="line"><span style="color:#9ECBFF;">            &lt;div class=</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">wrap</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">&gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">                &lt;div&gt;{{text}}&lt;/div&gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">                &lt;button class=</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">btn</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;"> type=</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">primary</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;"> v-on:click=</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">eventHappen(&#39;tap&#39;, $event, &#39;add&#39;, &#39;&#39;, &#39;bind&#39;)</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">&gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">                    add text</span></span>
<span class="line"><span style="color:#9ECBFF;">                &lt;/button&gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">                &lt;button class=</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">btn</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;"> type=</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">primary</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;"> v-on:click=</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">eventHappen(&#39;tap&#39;, $event, &#39;remove&#39;, &#39;&#39;, &#39;bind&#39;)</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">&gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">                    remove text</span></span>
<span class="line"><span style="color:#9ECBFF;">                &lt;/button&gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">            &lt;/div&gt;\`</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">renderPage</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">filters</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">modules</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">            global.</span><span style="color:#B392F0;">pageRender</span><span style="color:#E1E4E8;">(pageContent, templateComponents)</span></span>
<span class="line"><span style="color:#E1E4E8;">        };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">renderPage</span><span style="color:#E1E4E8;">(filterArr, param);</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (e) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        global.errorMsg[</span><span style="color:#9ECBFF;">&#39;execError&#39;</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> e;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> e;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">})(window);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">((</span><span style="color:#E36209;">global</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    global.errorMsg </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [];</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> templateComponents </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Object.</span><span style="color:#6F42C1;">assign</span><span style="color:#24292E;">({}, {});</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> param </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {};</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> filterArr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">JSON</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">parse</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;[]&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        filterArr </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> filterArr.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">item</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            param[item.module] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">eval</span><span style="color:#24292E;">(item.module)</span></span>
<span class="line"><span style="color:#24292E;">        });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> pageContent </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`</span></span>
<span class="line"><span style="color:#032F62;">            &lt;div class=</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">wrap</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">&gt;</span></span>
<span class="line"><span style="color:#032F62;">                &lt;div&gt;{{text}}&lt;/div&gt;</span></span>
<span class="line"><span style="color:#032F62;">                &lt;button class=</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">btn</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;"> type=</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">primary</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;"> v-on:click=</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">eventHappen(&#39;tap&#39;, $event, &#39;add&#39;, &#39;&#39;, &#39;bind&#39;)</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">&gt;</span></span>
<span class="line"><span style="color:#032F62;">                    add text</span></span>
<span class="line"><span style="color:#032F62;">                &lt;/button&gt;</span></span>
<span class="line"><span style="color:#032F62;">                &lt;button class=</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">btn</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;"> type=</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">primary</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;"> v-on:click=</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">eventHappen(&#39;tap&#39;, $event, &#39;remove&#39;, &#39;&#39;, &#39;bind&#39;)</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">&gt;</span></span>
<span class="line"><span style="color:#032F62;">                    remove text</span></span>
<span class="line"><span style="color:#032F62;">                &lt;/button&gt;</span></span>
<span class="line"><span style="color:#032F62;">            &lt;/div&gt;\`</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">renderPage</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">filters</span><span style="color:#24292E;">, </span><span style="color:#E36209;">modules</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">...</span></span>
<span class="line"><span style="color:#24292E;">            global.</span><span style="color:#6F42C1;">pageRender</span><span style="color:#24292E;">(pageContent, templateComponents)</span></span>
<span class="line"><span style="color:#24292E;">        };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">renderPage</span><span style="color:#24292E;">(filterArr, param);</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (e) {</span></span>
<span class="line"><span style="color:#24292E;">        global.errorMsg[</span><span style="color:#032F62;">&#39;execError&#39;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> e;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> e;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">})(window);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><ol start="3"><li>global.pageRender()函数是在slave.js文件里定义的方法，其内部的逻辑就是创建对应的san框架里的Page组件，等待初始化数据过来后，再绑定到界面上</li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 注册所有components(也包括顶层components -- page)</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#B392F0;">registerComponents</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">    global.</span><span style="color:#B392F0;">pageRender</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">pageTemplate</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">templateComponents</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">customComponents</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">filters</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">modules</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 定义当前页面的组件</span></span>
<span class="line"><span style="color:#E1E4E8;">        componentFactory.</span><span style="color:#B392F0;">componentDefine</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&#39;page&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            {</span></span>
<span class="line"><span style="color:#E1E4E8;">                template: </span><span style="color:#9ECBFF;">\`&lt;swan-page tabindex=&quot;-1&quot;&gt;\${</span><span style="color:#E1E4E8;">pageTemplate</span><span style="color:#9ECBFF;">}&lt;/swan-page&gt;\`</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                superComponent: </span><span style="color:#9ECBFF;">&#39;super-page&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">            },</span></span>
<span class="line"><span style="color:#E1E4E8;">            {</span></span>
<span class="line"><span style="color:#E1E4E8;">                classProperties: {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    components: {</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">componentFactory.</span><span style="color:#B392F0;">getComponents</span><span style="color:#E1E4E8;">(), </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">templateComponents, </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">customComponents},</span></span>
<span class="line"><span style="color:#E1E4E8;">                    filters: {</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">filtersObj</span></span>
<span class="line"><span style="color:#E1E4E8;">                    }</span></span>
<span class="line"><span style="color:#E1E4E8;">                }</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">        );</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">swanEvents</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;slaveActiveDefineComponentPage&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 获取page的组件类</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Page</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> global.componentFactory.</span><span style="color:#B392F0;">getComponents</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;page&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 初始化页面对象</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">page</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Page</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">swanEvents</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;slaveActiveConstructUserPage&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 调用页面对象的加载完成通知</span></span>
<span class="line"><span style="color:#E1E4E8;">        page.</span><span style="color:#B392F0;">slaveLoaded</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">swanEvents</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;slaveActiveUserPageSlaveloaded&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 用于记录用户模板代码在开始执行到监听initData事件之前的耗时</span></span>
<span class="line"><span style="color:#E1E4E8;">        global.FeSlaveSwanJsInitEnd </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Date.</span><span style="color:#B392F0;">now</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 监听等待initData，进行渲染</span></span>
<span class="line"><span style="color:#E1E4E8;">        page.communicator.</span><span style="color:#B392F0;">onMessage</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;initData&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">params</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">swanEvents</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;slaveActiveReceiveInitData&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#6A737D;">// 根据master传递的data，设定初始数据，并进行渲染</span></span>
<span class="line"><span style="color:#E1E4E8;">                page.</span><span style="color:#B392F0;">setInitData</span><span style="color:#E1E4E8;">(params);</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#B392F0;">swanEvents</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;slaveActiveRenderStart&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#6A737D;">// 真正的页面渲染，发生在initData之后</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#6A737D;">// 此处让页面真正挂载处于自定义组件成功引用其他自定义组件之后,</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#6A737D;">// 引用其它自定义组件是在同一时序promise.resolve().then里执行, 故此处attach时, 自定义组件已引用完成</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#B392F0;">setTimeout</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    page.</span><span style="color:#B392F0;">attach</span><span style="color:#E1E4E8;">(document.body);</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#6A737D;">// 通知master加载首屏之后的逻辑</span></span>
<span class="line"><span style="color:#E1E4E8;">                    page.communicator.</span><span style="color:#B392F0;">sendMessage</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#9ECBFF;">&#39;master&#39;</span><span style="color:#E1E4E8;">, {</span></span>
<span class="line"><span style="color:#E1E4E8;">                            type: </span><span style="color:#9ECBFF;">&#39;slaveAttached&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                            slaveId: page.slaveId</span></span>
<span class="line"><span style="color:#E1E4E8;">                        }</span></span>
<span class="line"><span style="color:#E1E4E8;">                    );</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#B392F0;">swanEvents</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;slaveActivePageAttached&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                }, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (e) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(e);</span></span>
<span class="line"><span style="color:#E1E4E8;">                global.errorMsg[</span><span style="color:#9ECBFF;">&#39;renderError&#39;</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> e;</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">        }, {listenPreviousEvent: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">    };</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 注册所有components(也包括顶层components -- page)</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#6F42C1;">registerComponents</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">...</span></span>
<span class="line"><span style="color:#24292E;">    global.</span><span style="color:#6F42C1;">pageRender</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">pageTemplate</span><span style="color:#24292E;">, </span><span style="color:#E36209;">templateComponents</span><span style="color:#24292E;">, </span><span style="color:#E36209;">customComponents</span><span style="color:#24292E;">, </span><span style="color:#E36209;">filters</span><span style="color:#24292E;">, </span><span style="color:#E36209;">modules</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">...</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 定义当前页面的组件</span></span>
<span class="line"><span style="color:#24292E;">        componentFactory.</span><span style="color:#6F42C1;">componentDefine</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&#39;page&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            {</span></span>
<span class="line"><span style="color:#24292E;">                template: </span><span style="color:#032F62;">\`&lt;swan-page tabindex=&quot;-1&quot;&gt;\${</span><span style="color:#24292E;">pageTemplate</span><span style="color:#032F62;">}&lt;/swan-page&gt;\`</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                superComponent: </span><span style="color:#032F62;">&#39;super-page&#39;</span></span>
<span class="line"><span style="color:#24292E;">            },</span></span>
<span class="line"><span style="color:#24292E;">            {</span></span>
<span class="line"><span style="color:#24292E;">                classProperties: {</span></span>
<span class="line"><span style="color:#24292E;">                    components: {</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">componentFactory.</span><span style="color:#6F42C1;">getComponents</span><span style="color:#24292E;">(), </span><span style="color:#D73A49;">...</span><span style="color:#24292E;">templateComponents, </span><span style="color:#D73A49;">...</span><span style="color:#24292E;">customComponents},</span></span>
<span class="line"><span style="color:#24292E;">                    filters: {</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#D73A49;">...</span><span style="color:#24292E;">filtersObj</span></span>
<span class="line"><span style="color:#24292E;">                    }</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        );</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">swanEvents</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;slaveActiveDefineComponentPage&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 获取page的组件类</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Page</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> global.componentFactory.</span><span style="color:#6F42C1;">getComponents</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;page&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 初始化页面对象</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">page</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Page</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">swanEvents</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;slaveActiveConstructUserPage&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 调用页面对象的加载完成通知</span></span>
<span class="line"><span style="color:#24292E;">        page.</span><span style="color:#6F42C1;">slaveLoaded</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">swanEvents</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;slaveActiveUserPageSlaveloaded&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 用于记录用户模板代码在开始执行到监听initData事件之前的耗时</span></span>
<span class="line"><span style="color:#24292E;">        global.FeSlaveSwanJsInitEnd </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Date.</span><span style="color:#6F42C1;">now</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 监听等待initData，进行渲染</span></span>
<span class="line"><span style="color:#24292E;">        page.communicator.</span><span style="color:#6F42C1;">onMessage</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;initData&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">params</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">swanEvents</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;slaveActiveReceiveInitData&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">// 根据master传递的data，设定初始数据，并进行渲染</span></span>
<span class="line"><span style="color:#24292E;">                page.</span><span style="color:#6F42C1;">setInitData</span><span style="color:#24292E;">(params);</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6F42C1;">swanEvents</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;slaveActiveRenderStart&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">// 真正的页面渲染，发生在initData之后</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">// 此处让页面真正挂载处于自定义组件成功引用其他自定义组件之后,</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">// 引用其它自定义组件是在同一时序promise.resolve().then里执行, 故此处attach时, 自定义组件已引用完成</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6F42C1;">setTimeout</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                    page.</span><span style="color:#6F42C1;">attach</span><span style="color:#24292E;">(document.body);</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#6A737D;">// 通知master加载首屏之后的逻辑</span></span>
<span class="line"><span style="color:#24292E;">                    page.communicator.</span><span style="color:#6F42C1;">sendMessage</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#032F62;">&#39;master&#39;</span><span style="color:#24292E;">, {</span></span>
<span class="line"><span style="color:#24292E;">                            type: </span><span style="color:#032F62;">&#39;slaveAttached&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                            slaveId: page.slaveId</span></span>
<span class="line"><span style="color:#24292E;">                        }</span></span>
<span class="line"><span style="color:#24292E;">                    );</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#6F42C1;">swanEvents</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;slaveActivePageAttached&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                }, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (e) {</span></span>
<span class="line"><span style="color:#24292E;">                console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(e);</span></span>
<span class="line"><span style="color:#24292E;">                global.errorMsg[</span><span style="color:#032F62;">&#39;renderError&#39;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> e;</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        }, {listenPreviousEvent: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">...</span></span>
<span class="line"><span style="color:#24292E;">    };</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">...</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br></div></div><ol start="4"><li>当界面渲染后，发送’slaveAttached’事件，逻辑层执行onShow()生命周期函数</li></ol><h2 id="交互" tabindex="-1">交互 <a class="header-anchor" href="#交互" aria-label="Permalink to &quot;交互&quot;">​</a></h2><ol><li>当用户点击界面上的button按钮时，会触发san.Page组件里的eventHappen()函数，发送’event’事件</li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 执行用户绑定的事件</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{string}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">eventName</span><span style="color:#6A737D;"> 事件名称</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{Object}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">$event</span><span style="color:#6A737D;"> 事件对象</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{Function}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">reflectMethod</span><span style="color:#6A737D;"> 用户回调方法</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{boolean}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">capture</span><span style="color:#6A737D;"> 是否事件捕获</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{boolean}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">catchType</span><span style="color:#6A737D;"> 是否终止事件执行</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{Object}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">customEventParams</span><span style="color:#6A737D;"> 用户绑定的事件集合</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#B392F0;">eventHappen</span><span style="color:#E1E4E8;">: </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">eventName</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$event</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">reflectMethod</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">capture</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">catchType</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">customEventParams</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">swanEvents</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;slaveEventHappen&#39;</span><span style="color:#E1E4E8;">, {</span></span>
<span class="line"><span style="color:#E1E4E8;">        eventName: eventName,</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> ($event </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> catchType </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;catch&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        $event.stopPropagation </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> $event.</span><span style="color:#B392F0;">stopPropagation</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        (eventName </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;touchstart&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> eventName </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;touchmove&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> $event.preventDefault </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> $event.</span><span style="color:#B392F0;">preventDefault</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.$communicator.</span><span style="color:#B392F0;">sendMessage</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;master&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        {</span></span>
<span class="line"><span style="color:#E1E4E8;">            type: </span><span style="color:#9ECBFF;">&#39;event&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            value: {</span></span>
<span class="line"><span style="color:#E1E4E8;">                eventType: eventName,</span></span>
<span class="line"><span style="color:#E1E4E8;">                reflectMethod,</span></span>
<span class="line"><span style="color:#E1E4E8;">                e: $event, </span><span style="color:#6A737D;">//eventProccesser(eventName, $event)</span></span>
<span class="line"><span style="color:#E1E4E8;">            },</span></span>
<span class="line"><span style="color:#E1E4E8;">            slaveId: </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.slaveId,</span></span>
<span class="line"><span style="color:#E1E4E8;">            customEventParams</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    );</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 执行用户绑定的事件</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{string}</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">eventName</span><span style="color:#6A737D;"> 事件名称</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{Object}</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">$event</span><span style="color:#6A737D;"> 事件对象</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{Function}</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">reflectMethod</span><span style="color:#6A737D;"> 用户回调方法</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{boolean}</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">capture</span><span style="color:#6A737D;"> 是否事件捕获</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{boolean}</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">catchType</span><span style="color:#6A737D;"> 是否终止事件执行</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{Object}</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">customEventParams</span><span style="color:#6A737D;"> 用户绑定的事件集合</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#6F42C1;">eventHappen</span><span style="color:#24292E;">: </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">eventName</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$event</span><span style="color:#24292E;">, </span><span style="color:#E36209;">reflectMethod</span><span style="color:#24292E;">, </span><span style="color:#E36209;">capture</span><span style="color:#24292E;">, </span><span style="color:#E36209;">catchType</span><span style="color:#24292E;">, </span><span style="color:#E36209;">customEventParams</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">swanEvents</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;slaveEventHappen&#39;</span><span style="color:#24292E;">, {</span></span>
<span class="line"><span style="color:#24292E;">        eventName: eventName,</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> ($event </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> catchType </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;catch&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        $event.stopPropagation </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> $event.</span><span style="color:#6F42C1;">stopPropagation</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        (eventName </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;touchstart&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> eventName </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;touchmove&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> $event.preventDefault </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> $event.</span><span style="color:#6F42C1;">preventDefault</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.$communicator.</span><span style="color:#6F42C1;">sendMessage</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;master&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        {</span></span>
<span class="line"><span style="color:#24292E;">            type: </span><span style="color:#032F62;">&#39;event&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            value: {</span></span>
<span class="line"><span style="color:#24292E;">                eventType: eventName,</span></span>
<span class="line"><span style="color:#24292E;">                reflectMethod,</span></span>
<span class="line"><span style="color:#24292E;">                e: $event, </span><span style="color:#6A737D;">//eventProccesser(eventName, $event)</span></span>
<span class="line"><span style="color:#24292E;">            },</span></span>
<span class="line"><span style="color:#24292E;">            slaveId: </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.slaveId,</span></span>
<span class="line"><span style="color:#24292E;">            customEventParams</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    );</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><ol start="2"><li>逻辑层master.js监听’event’事件后，执行对应Page里的对应函数</li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 绑定开发者绑定的events</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#B392F0;">bindDeveloperEvents</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.slaveCommunicator.</span><span style="color:#B392F0;">onMessage</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;event&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">event</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">swanEvents</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;masterListenEvent&#39;</span><span style="color:#E1E4E8;">, event);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">eventOccurredPageObject</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.history.</span><span style="color:#B392F0;">seek</span><span style="color:#E1E4E8;">(event.slaveId).</span><span style="color:#B392F0;">getUserPageInstance</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// if (event.customEventParams) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//     const nodeId = event.customEventParams.nodeId;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//     const reflectComponent = eventOccurredPageObject</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//         .privateProperties.customComponents[nodeId];</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//     if (reflectComponent[event.value.reflectMethod]) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//         reflectComponent[event.value.reflectMethod]</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//             .call(reflectComponent, event.value.e);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//     }</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// }</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// else</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (eventOccurredPageObject[event.value.reflectMethod]) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            eventOccurredPageObject[event.value.reflectMethod]</span></span>
<span class="line"><span style="color:#E1E4E8;">                .</span><span style="color:#B392F0;">call</span><span style="color:#E1E4E8;">(eventOccurredPageObject, event.value.e);</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 绑定开发者绑定的events</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#6F42C1;">bindDeveloperEvents</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.slaveCommunicator.</span><span style="color:#6F42C1;">onMessage</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;event&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">event</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">swanEvents</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;masterListenEvent&#39;</span><span style="color:#24292E;">, event);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">eventOccurredPageObject</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.history.</span><span style="color:#6F42C1;">seek</span><span style="color:#24292E;">(event.slaveId).</span><span style="color:#6F42C1;">getUserPageInstance</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// if (event.customEventParams) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//     const nodeId = event.customEventParams.nodeId;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//     const reflectComponent = eventOccurredPageObject</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//         .privateProperties.customComponents[nodeId];</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//     if (reflectComponent[event.value.reflectMethod]) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//         reflectComponent[event.value.reflectMethod]</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//             .call(reflectComponent, event.value.e);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//     }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// else</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (eventOccurredPageObject[event.value.reflectMethod]) {</span></span>
<span class="line"><span style="color:#24292E;">            eventOccurredPageObject[event.value.reflectMethod]</span></span>
<span class="line"><span style="color:#24292E;">                .</span><span style="color:#6F42C1;">call</span><span style="color:#24292E;">(eventOccurredPageObject, event.value.e);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><ol start="3"><li>当逻辑层master，执行this.setData()函数更新界面时，会发送’setData’事件，渲染层slave.js会监听此事件，进行界面更新</li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 逻辑层Page对象</span></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 页面中挂载的setData操作方法，操作后，会传到slave，对视图进行更改</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{string|Object}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">[path]</span><span style="color:#6A737D;"> - setData的数据操作路径，或setData的对象{path: value}</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{*}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">[value]</span><span style="color:#6A737D;"> - setData的操作值</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{Function}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">[cb]</span><span style="color:#6A737D;"> - setData的回调函数</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#B392F0;">setData</span><span style="color:#E1E4E8;">(path, value, cb) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">sendDataOperation</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">        type: </span><span style="color:#9ECBFF;">&#39;set&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        path,</span></span>
<span class="line"><span style="color:#E1E4E8;">        value,</span></span>
<span class="line"><span style="color:#E1E4E8;">        cb</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"><span style="color:#E1E4E8;">},</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 渲染层</span></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 初始化事件绑定</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@private</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#B392F0;">initMessagebinding</span><span style="color:#E1E4E8;">: </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.$communicator.</span><span style="color:#B392F0;">onMessage</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">        [</span><span style="color:#9ECBFF;">&#39;setData&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;pushData&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;popData&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;unshiftData&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;shiftData&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;removeAtData&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;spliceData&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FFAB70;">params</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">swanEvents</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;slaveDataEvent&#39;</span><span style="color:#E1E4E8;">, params);</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">setObject</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> params.setObject </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> {};</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">operationType</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> params.type.</span><span style="color:#B392F0;">replace</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Data&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (operationType </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;set&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#6A737D;">// TODO-ly 此处可以优化，使用Vue效率最高的方案</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> key </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> setObject){</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">[key] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> setObject[key];</span></span>
<span class="line"><span style="color:#E1E4E8;">                }</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    );</span></span>
<span class="line"><span style="color:#E1E4E8;">},</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 逻辑层Page对象</span></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 页面中挂载的setData操作方法，操作后，会传到slave，对视图进行更改</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{string|Object}</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">[path]</span><span style="color:#6A737D;"> - setData的数据操作路径，或setData的对象{path: value}</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{*}</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">[value]</span><span style="color:#6A737D;"> - setData的操作值</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{Function}</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">[cb]</span><span style="color:#6A737D;"> - setData的回调函数</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#6F42C1;">setData</span><span style="color:#24292E;">(path, value, cb) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">sendDataOperation</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">        type: </span><span style="color:#032F62;">&#39;set&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        path,</span></span>
<span class="line"><span style="color:#24292E;">        value,</span></span>
<span class="line"><span style="color:#24292E;">        cb</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span>
<span class="line"><span style="color:#24292E;">},</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 渲染层</span></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 初始化事件绑定</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@private</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#6F42C1;">initMessagebinding</span><span style="color:#24292E;">: </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.$communicator.</span><span style="color:#6F42C1;">onMessage</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">        [</span><span style="color:#032F62;">&#39;setData&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;pushData&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;popData&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;unshiftData&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;shiftData&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;removeAtData&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;spliceData&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#E36209;">params</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">swanEvents</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;slaveDataEvent&#39;</span><span style="color:#24292E;">, params);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">setObject</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> params.setObject </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> {};</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">operationType</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> params.type.</span><span style="color:#6F42C1;">replace</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Data&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (operationType </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;set&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">// TODO-ly 此处可以优化，使用Vue效率最高的方案</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> key </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> setObject){</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">[key] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> setObject[key];</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    );</span></span>
<span class="line"><span style="color:#24292E;">},</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div>`,58),r=[t];function E(y,i,F,b,u,m){return n(),a("div",null,r)}const v=s(c,[["render",E]]);export{A as __pageData,v as default};
