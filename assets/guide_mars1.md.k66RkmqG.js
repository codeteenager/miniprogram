import{_ as a,o as e,c as r,R as t}from"./chunks/framework.ktCRvYov.js";const p=JSON.parse('{"title":"介绍","description":"","frontmatter":{},"headers":[],"relativePath":"guide/mars1.md","filePath":"guide/mars1.md","lastUpdated":1700649158000}'),s={name:"guide/mars1.md"},i=t('<h1 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h1><h2 id="mars-是什么" tabindex="-1">Mars 是什么？ <a class="header-anchor" href="#mars-是什么" aria-label="Permalink to &quot;Mars 是什么？&quot;">​</a></h2><p>Mars 是由 Vue 驱动的多端开发框架，其语法规范完全遵循 Vue，支持一套代码同时运行到百度小程序、微信小程序以及 H5 Web 端。 Mars 诞生于搜索垂类产品对于小程序和 H5 Web 端相同的产品业务需求的场景下。从框架设计研发之初，就定位于解决小程序以及 H5 Web 端的复用和同构开发能力。</p><h2 id="mars-与其他框架有何区别" tabindex="-1">Mars 与其他框架有何区别？ <a class="header-anchor" href="#mars-与其他框架有何区别" aria-label="Permalink to &quot;Mars 与其他框架有何区别？&quot;">​</a></h2><p>随着小程序生态的崛起，市面上各种小程序开发框架层出不穷，其中不乏基于 Vue 驱动的框架（如 mpvue、megalo 等），那么 Mars 有何差异化呢？</p><ul><li>Mars 支持了完整的原生自定义组件能力，相对于基于小程序模板能力的实现能支持更多的特性。</li><li>Mars 开发规范明确，其开发模式遵循 Vue 规范，基础组件、API 规范遵循小程序规范。降低开发者学习成本的同时为多端适配提供了完整的规范支持。</li><li>Mars 提供了完整的 H5 Web 端适配解决方案，在框架、基础组件及 API 上针对 H5 提供了极大程度的适配(包括 App 框架、路由、页面转场、生命周期、页面方法及配置等)实现和打平，开发者只需在少数由于平台差异无法适配的组件和 API 上进行较低成本的适配，即可完美运行在 H5 端（效果参见下方案例）。</li><li>性能优化。Mars 基于 Vue 的响应式系统实现了数据变更检测，只有变化了的 data 和 computed 才会从 Vue 同步到小程序。 Mars 虽然是又一个小程序开发框架，但是对 H5 适配提供了强大的支持，主要是为了解决小程序 H5 端适配而诞生。Mars 非常适用于对小程序端和 H5 Web 端有同构开发需求的开发场景。</li></ul><h2 id="为什么选择-vue-技术栈" tabindex="-1">为什么选择 Vue 技术栈？ <a class="header-anchor" href="#为什么选择-vue-技术栈" aria-label="Permalink to &quot;为什么选择 Vue 技术栈？&quot;">​</a></h2><p>为什么选择 Vue 技术栈？主要是以下几个考虑点：</p><ul><li>搜索垂类业务的技术栈是 Vue，选择 Vue 技术栈能降低一些学习成本；</li><li>目前基于 Vue 的小程序框架还无法很好的解决 H5 端的同构开发的需求，而 React 技术栈已有 Taro 框架提供了 H5 端解决方案；</li><li>Vue 运行时提供了强大的数据驱动能力，Vue 的单文件组件开发方式、模板语法具有很好的开发体验，且易与小程序等平台对接；其技术栈具备强大的生态、具有多端适配扩展能力和空间。</li></ul>',9),l=[i];function o(u,d,n,c,_,h){return e(),r("div",null,l)}const V=a(s,[["render",o]]);export{p as __pageData,V as default};
